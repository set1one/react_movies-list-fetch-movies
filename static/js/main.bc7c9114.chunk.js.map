{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","a","fetch","response","json","FindMovie","addMovie","useState","setTitle","newMovie","setNewMovie","movieError","setMovieError","loadMovie","movieFromServer","Response","Title","Plot","Poster","imdbID","onSubmit","event","preventDefault","htmlFor","type","id","value","onChange","target","placeholder","onClick","disabled","App","data","setMovies","movieAdded","setMovieAdded","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc7c9114.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.description}\n          <br />\n          <a href={movie.imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbId}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_URL = 'http://www.omdbapi.com/?apikey=4d03bd25';\n\nexport const getMovie = async (title: string): Promise<ApiMovie> => {\n  const response = await fetch(`${API_URL}&t=[${title}]`);\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api/api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (value: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const { addMovie } = props;\n  const [title, setTitle] = useState('');\n  const [newMovie, setNewMovie] = useState<Movie | null>(null);\n  const [movieError, setMovieError] = useState(false);\n\n  const loadMovie = async () => {\n    const movieFromServer = await getMovie(title);\n\n    if (movieFromServer.Response === 'False') {\n      setMovieError(true);\n      setNewMovie(null);\n\n      return;\n    }\n\n    setMovieError(false);\n    setNewMovie({\n      title: movieFromServer.Title,\n      description: movieFromServer.Plot,\n      imgUrl: movieFromServer.Poster,\n      imdbId: movieFromServer.imdbID,\n      imdbUrl: `https://www.imdb.com/title/${movieFromServer.imdbID}`,\n    });\n    setTitle('');\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setMovieError(false);\n    setTitle(value);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    loadMovie();\n  };\n\n  return (\n    <>\n      <form\n        onSubmit={handleSubmit}\n        className=\"find-movie\"\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              value={title}\n              onChange={handleChange}\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n            />\n          </div>\n          {movieError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={loadMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!newMovie}\n              onClick={() => {\n                addMovie(newMovie as Movie);\n                setNewMovie(null);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {newMovie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={newMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App:React.FC = () => {\n  const [movies, setMovies] = useState(data);\n  const [movieAdded, setMovieAdded] = useState(false);\n\n  const addMovie = (newMovie: Movie) => {\n    const foundMovie = movies.find(movie => movie.imdbId === newMovie.imdbId);\n\n    if (!foundMovie) {\n      setMovies([newMovie, ...movies]);\n      setMovieAdded(false);\n    } else {\n      setMovieAdded(true);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n        {movieAdded && (\n          <p>Movie is already added</p>\n        )}\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}